apiVersion: landscaper.gardener.cloud/v1alpha1
kind: Blueprint
jsonSchema: "https://json-schema.org/draft/2019-09/schema" # required

imports:
  - name: cluster
    targetType: landscaper.gardener.cloud/kubernetes-cluster

  - name: release
    type: data
    schema:
      type: object

  - name: values
    type: data
    schema:
      type: object

deployExecutions:
  - name: default
    type: GoTemplate
    template: |
      {{ $releaseName := .imports.release.name }}
      {{ $epoch := now | unixEpoch }}
      deployItems:
      {{- if .imports.values.helm }}
      
        - name: default-deploy-item-helm
          type: landscaper.gardener.cloud/helm

          target:
            import: cluster

          config:
            apiVersion: helm.deployer.landscaper.gardener.cloud/v1alpha1
            kind: ProviderConfiguration
            name: {{ $releaseName }}
            namespace: {{ $releaseName }}
            createNamespace: true
            helmDeployment: {{ .imports.values.helmDeployment }}

            chart:
              {{ $chartResource := getResource .cd "name" "many-deployitems-extended-chart" }}
              ref: {{ $chartResource.access.imageReference }}

            values:
              text: {{ .imports.values.text }}
              sleep: {{ .imports.values.sleep }}
              {{ $jobname := print $releaseName "-" $epoch }}
              jobname: {{ $jobname }}
              numOfCm: {{ .imports.values.numOfCm }}
      
            {{- if .imports.values.sleep | int | lt 0 }}
            readinessChecks:
              disableDefault: false
              custom:
                - name: CheckJob
                  resourceSelector:
                    - apiVersion: batch/v1
                      kind: Job
                      name: {{ $jobname }}
                      namespace: {{ $releaseName }}
                  requirements:
                    - jsonPath: .status.succeeded
                      operator: ==
                      values:
                        - value: 1
            {{- end }}
      
      {{- else }}
      
        - name: default-deploy-item-manifest
          type: landscaper.gardener.cloud/kubernetes-manifest
          target:
            import: cluster
          config:
            apiVersion: manifest.deployer.landscaper.gardener.cloud/v1alpha2
            kind: ProviderConfiguration
            updateStrategy: update
            manifests:
              {{- $text := .imports.values.text }}
              {{- range $index := .imports.values.numOfCm | int | until }}
              - policy: manage
                manifest:
                  apiVersion: v1
                  kind: ConfigMap
                  metadata:
                    name: man-{{ $releaseName }}-{{ $index }}
                    namespace: {{ $releaseName }}
                  data:
                    testData: {{ $text }}
              {{- end }}
              {{- if .imports.values.sleep | int | lt 0 }}
              - policy: manage
                manifest:
                  apiVersion: batch/v1
                  kind: Job
                  metadata:
                    {{ $jobname2 := print "man-" $releaseName "-" $epoch }}
                    name: {{ $jobname2 }}
                    namespace: {{ $releaseName }}
                  spec:
                    ttlSecondsAfterFinished: 600
                    template:
                      spec:
                        restartPolicy: Never
                        containers:
                          - name: sleep-job
                            image: "alpine:3.3"
                            command: ["/bin/sleep","{{ .imports.values.sleep }}"]
            readinessChecks:
              disableDefault: false
              custom:
                - name: CheckJob
                  resourceSelector:
                    - apiVersion: batch/v1
                      kind: Job
                      name: {{ $jobname2 }}
                      namespace: {{ $releaseName }}
                  requirements:
                    - jsonPath: .status.succeeded
                      operator: ==
                      values:
                        - value: 1
              {{- end }}
      {{- end }}
      
